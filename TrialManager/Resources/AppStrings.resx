<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="App_Title" xml:space="preserve">
    <value>TrialManager</value>
    <comment>This is the title of the application</comment>
  </data>
  <data name="Command_CreateDraw" xml:space="preserve">
    <value>Refresh Draw</value>
    <comment>This label appears on a control which initiates the draw creation sequence</comment>
  </data>
  <data name="Command_ExportDraw" xml:space="preserve">
    <value>Export</value>
    <comment>This label appears on a control which allows the user to export the draw</comment>
  </data>
  <data name="Command_ImportData" xml:space="preserve">
    <value>Import Data</value>
    <comment>This label appears on a control which allows the user to import a new dataset</comment>
  </data>
  <data name="Command_PrintDraw" xml:space="preserve">
    <value>Print Draw</value>
    <comment>This label appears on a control allowing the draw to be printed</comment>
  </data>
  <data name="Header_Address" xml:space="preserve">
    <value>Address</value>
    <comment>This header appears above a address</comment>
  </data>
  <data name="Header_Dog" xml:space="preserve">
    <value>Dog</value>
    <comment>This header appears above a list of dogs, in the context of which dog a trialist is assigned for their run</comment>
  </data>
  <data name="Header_DogList" xml:space="preserve">
    <value>Dogs</value>
    <comment>This header appears above a list of dogs</comment>
  </data>
  <data name="Header_EditTrialist" xml:space="preserve">
    <value>Edit Trialist Entry</value>
    <comment>This header appears on a control which provides means to edit a data entry</comment>
  </data>
  <data name="Header_Email" xml:space="preserve">
    <value>Email</value>
    <comment>This header appears above a list of email addresses</comment>
  </data>
  <data name="Header_FullName" xml:space="preserve">
    <value>Competitor</value>
    <comment>This header appears above a list of full names</comment>
  </data>
  <data name="Header_PhoneNumber" xml:space="preserve">
    <value>Phone Number</value>
    <comment>This header appears above a list of phone numbers</comment>
  </data>
  <data name="Header_RunDay" xml:space="preserve">
    <value>Day</value>
    <comment>This header appears above a list of days on which a trialist makes their run</comment>
  </data>
  <data name="Header_RunNumber" xml:space="preserve">
    <value>Run Number</value>
    <comment>This header appears above a list indicating the run number of a draw entry</comment>
  </data>
  <data name="Header_SelectDataFile" xml:space="preserve">
    <value>Select Data File</value>
    <comment>This header identifies the data import step of the data import page</comment>
  </data>
  <data name="Header_Status" xml:space="preserve">
    <value>Status</value>
    <comment>This header appears above a list of trialist/dog status'</comment>
  </data>
  <data name="Hint_RightClickToEdit" xml:space="preserve">
    <value>Hint: Right-click an entry to edit it!</value>
    <comment>This hint message appears in the data view to let users know that they can right click an entry to edit it</comment>
  </data>
  <data name="Hint_RunsPerDay" xml:space="preserve">
    <value>Runs Per Day</value>
    <comment>This hint appears on a textbox allowing the user to set the number of runs per day in the trial</comment>
  </data>
  <data name="Hint_SearchTrialists" xml:space="preserve">
    <value>Search by name</value>
    <comment>This hint appears on a control allowing the user to search the trialists by name</comment>
  </data>
  <data name="Hint_TrialLocation" xml:space="preserve">
    <value>Set Trial Location</value>
    <comment>This hint appears on the autocomplete box allowing the user to set the trial location</comment>
  </data>
  <data name="Hint_TrialName" xml:space="preserve">
    <value>Trial Name</value>
    <comment>This hint appears on a control allowing the user to add a name to the trial</comment>
  </data>
  <data name="Hint_TrialNotes" xml:space="preserve">
    <value>Trial Notes</value>
    <comment>This hint appears on a control allowing the user to add notes about the trial</comment>
  </data>
  <data name="Hint_TrialStartDate" xml:space="preserve">
    <value>Starting Date</value>
    <comment>This hint appears on a timepicker control allowing the trial start date to be chosen</comment>
  </data>
  <data name="Hint_TrialStartTime" xml:space="preserve">
    <value>Trial Start Time</value>
    <comment>This hint appears on a timepicker control allowing the starting time of the trial to be selected</comment>
  </data>
  <data name="Label_Done" xml:space="preserve">
    <value>Done</value>
    <comment>This label appears on a control which completes an action</comment>
  </data>
  <data name="Label_ImportData" xml:space="preserve">
    <value>Import Data</value>
    <comment>This label appears on a control which initiates the data import sequence</comment>
  </data>
  <data name="Stepper_Continue" xml:space="preserve">
    <value>Continue</value>
    <comment>This label appears on a stepper continue button</comment>
  </data>
  <data name="ToolTip_AddItem" xml:space="preserve">
    <value>Add Entry</value>
    <comment>This tooltip appears on a control which adds a data entry</comment>
  </data>
  <data name="ToolTip_DeleteItem" xml:space="preserve">
    <value>Delete Entry</value>
    <comment>This tooltip appears on a control which deletes a data entry</comment>
  </data>
  <data name="ToolTip_EditItem" xml:space="preserve">
    <value>Edit Entry</value>
    <comment>This tooltip appears on a control which allows a data entry to be edited</comment>
  </data>
  <data name="ToolTip_EditRightClickShortcutHint" xml:space="preserve">
    <value>Right click to edit entry</value>
    <comment>This tooltip appears on an editable data entry which can be edited by right clicking</comment>
  </data>
</root>